tfs_technical_names_merged_2 = f"""
CREATE TABLE tfs_technical_names_merged_2 AS 
SELECT 
  first_phase_table.`shpmt_id` AS `shpmt_id`, 
  first_phase_table.`orign_zone_for_tfs_name` AS `tfs_origin_zone_name`, 
  first_phase_table.`destination_zone` AS `dest_zone_val`, 
  first_phase_table.`ship_to_party_description` AS `ship_to_party_desc`, 
  first_phase_table.`customer_description` AS `customer_desc`, 
  first_phase_table.`carrier_description` AS `carr_desc`, 
  first_phase_table.`voucher_type` AS `voucher_type_code`, 
  first_phase_table.`tdc_val_code` AS `tdcval_code`, 
  first_phase_table.`freight_cost_charge` AS `freight_cost_charge_code`, 
  first_phase_table.`tms_freight_charge_description` AS `tms_freight_charge_desc`, 
  first_phase_table.`freight_charge_description_2` AS `freight_charge2_desc`, 
  first_phase_table.`flow_reason` AS `flow_reason_val`, 
  first_phase_table.`accessorial_reason` AS `acsrl_reason_name`, 
  first_phase_table.`total_transportation_cost_usd` AS `total_trans_cost_usd_amt`, 
  first_phase_table.`adjustment_cost_usd` AS `adjmt_cost_usd_amt`, 
  first_phase_table.`contracted_cost_usd` AS `contract_cost_usd_amt`, 
  first_phase_table.`post_charge_cost_usd` AS `post_charge_cost_usd_amt`, 
  first_phase_table.`spot_cost_usd` AS `spot_cost_usd_amt`, 
  first_phase_table.`miscelaneous_cost_usd` AS `misc_cost_usd_amt`, 
  first_phase_table.`wight_per_load` AS `weight_per_load_qty`, 
  first_phase_table.`volume_per_load` AS `volume_per_load_qty`, 
  first_phase_table.`floor_positions_as_shipped` AS `floor_position_as_ship_cnt`, 
  first_phase_table.`theoretical_pallets` AS `theortc_pallet_cnt`, 
  from_unixtime(
    unix_timestamp(
      first_phase_table.`actual_gi_date`, 
      'dd/MM/yyyy'
    ), 
    'yyyy-MM-dd'
  ) AS actual_gi_date, 
  first_phase_table.`charge_code_reason_code` AS `charge_code`, 
  first_phase_table.`delivery_id_#` AS `dlvry_id`, 
  first_phase_table.`proft_center_code` AS `profit_center_code`, 
  first_phase_table.`ctrng_area_code` AS `cntrlng_area_code`, 
  first_phase_table.`distance` AS `distance_qty`, 
  first_phase_table.`distance_unit_of_measure` AS `distance_uom`, 
  first_phase_table.`total_weight_as_shipped` AS `total_weight_ship_qty`, 
  first_phase_table.`weight_unit_of_measure` AS `weight_uom`, 
  first_phase_table.`total_volume_as_shipped` AS `total_volume_ship_qty`, 
  first_phase_table.`volume_unit_of_measure` AS `volume_uom`, 
  first_phase_table.`currency` AS `currency_code`, 
  first_phase_table.`#su_per_load` AS `su_per_load_qty`, 
  first_phase_table.`region_from_code` AS `ship_from_region_code`, 
  first_phase_table.`region_to_description` AS `ship_to_region_desc`, 
  first_phase_table.`country_to` AS `country_to_code`, 
  first_phase_table.`category_code` AS `categ_code`, 
  first_phase_table.`sector_description` AS `sector_desc`, 
  first_phase_table.`subsector_description` AS `subsector_desc`, 
  first_phase_table.`voucher_status` AS `voucher_status_code`, 
  first_phase_table.`voucher_reference_#` AS `voucher_ref_num`, 
  first_phase_table.`country_from_description` AS `country_from_desc_name`, 
  first_phase_table.`country_to_description` AS `country_to_desc_name`, 
  first_phase_table.`equipment_mode_description` AS `equip_mode_desc`, 
  first_phase_table.`region_from_description` AS `ship_from_region_desc`, 
  first_phase_table.`table_uom` AS `table_uom`, 
  first_phase_table.`origin_description` AS `origin_desc`, 
  first_phase_table.`cost_center` AS `cost_center_code`, 
  first_phase_table.`voucher_id` AS `voucher_id`, 
  first_phase_table.`multi_stop_flag` AS `multi_stop_flag`, 
  first_phase_table.`temp_protect` AS `temp_protect_code`, 
  first_phase_table.`spot_flag_val` AS `spot_flag_val`, 
  first_phase_table.`gbu_code` AS `gbu_code`, 
  from_unixtime(
    unix_timestamp(
      first_phase_table.`goods_receipt_posting_date`, 
      'dd/MM/yyyy'
    ), 
    'yyyy-MM-dd'
  ) AS `goods_receipt_post_date`, 
  first_phase_table.`created_time` AS `create_tmstp`, 
  from_unixtime(
    unix_timestamp(
      first_phase_table.`created_date`, 
      'dd/MM/yyyy'
    ), 
    'yyyy-MM-dd'
  ) AS `create_date`, 
  first_phase_table.`na_target_country_code` AS `na_target_country_code`, 
  first_phase_table.`ship_to_#` AS `ship_to_party_num`, 
  first_phase_table.`shipping_point_code` AS `ship_point_code`, 
  first_phase_table.`transportation_planning_point` AS `trans_plan_point_code`, 
  first_phase_table.`equipment_mode_code` AS `equip_mode_code`, 
  first_phase_table.`transportation_equipment_type_code` AS `trans_equip_type_code`, 
  first_phase_table.`freight_type_customer_interplant_indicator` AS `freight_type_customer_interplant_ind_code`, 
  first_phase_table.`country_from_code` AS `country_from_code`, 
  first_phase_table.`charge_level_description` AS `tms_charge_lvl_desc`, 
  first_phase_table.`charge_kind_description` AS `tms_charge_kind_desc`, 
  first_phase_table.`reason_code_cost_tms_interface` AS `tms_interface_reason_cost_code`, 
  first_phase_table.`chart_acct_num` AS `chart_account_num`, 
  first_phase_table.`steps` AS `step_factor`, 
  first_phase_table.`company_code` AS `company_code`, 
  first_phase_table.`tdc_val_description` AS `tdcval_desc`, 
  from_unixtime(
    unix_timestamp(
      first_phase_table.`freight_bill_created_date`, 
      'dd/MM/yyyy'
    ), 
    'yyyy-MM-dd'
  ) AS `freight_bill_create_date`, 
  first_phase_table.`dlvry_item_count` AS `dlvry_item_cnt`, 
  first_phase_table.`carr_country_name` AS `carr_country_name`, 
  first_phase_table.`carr_country_code` AS `carr_country_code`, 
  first_phase_table.`carr_postal_code` AS `carr_postal_code`, 
  first_phase_table.`ship_to_postal_code` AS `ship_to_postal_code`, 
  first_phase_table.`ship_to_state_code` AS `ship_to_state_code`, 
  first_phase_table.`ship_to_state_name` AS `ship_to_state_name`, 
  first_phase_table.`minority_ind_val` AS `minority_ind_val`, 
  first_phase_table.`dest_zone_go_name` AS `dest_zone_go_name`, 
  first_phase_table.`origin_zone_name` AS `origin_zone_name`, 
  case when first_phase_table.`freight_type` = 'Customer' then first_phase_table.`ship_to_#` when first_phase_table.`freight_type` = 'Interplant' then NVL(
    NVL(
      temp_tfs.ship_to_party_id, first_phase_table.`dest_loc_code`
    ), 
    first_phase_table.`ship_to_#`
  ) else first_phase_table.`ship_to_#` end as `dest_loc_code`, 
  first_phase_table.`charge_detail_id` AS `charge_detail_id`, 
  first_phase_table.`material_document_#` AS `material_doc_num`, 
  first_phase_table.`purchasing_document_#` AS `purchase_doc_num`, 
  first_phase_table.`charge_kind_code` AS `charge_kind_code`, 
  first_phase_table.`charge_level_code` AS `charge_lvl`, 
  first_phase_table.`billing_proposal_no` AS `billing_proposal_num`, 
  first_phase_table.`gl_account_#` AS `gl_account_num`, 
  first_phase_table.`underlying_data_for_pallets_calc2` AS `step_per_load2_rate`, 
  first_phase_table.`underlying_data_for_pallets_calc` AS `step_per_load_rate`, 
  first_phase_table.`total_transportation_cost_local_currency` AS `total_trans_cost_local_currency_amt`, 
  first_phase_table.`cost_on_step_local_currency` AS `cost_on_step_local_currency_amt`, 
  first_phase_table.`adjustment_cost_local_currency` AS `adjmt_cost_local_currency_amt`, 
  first_phase_table.`contracted_cost_local_currency` AS `contract_cost_local_currency_amt`, 
  first_phase_table.`post_charge_cost_local_currency` AS `post_charge_cost_local_currency_amt`, 
  first_phase_table.`spot_cost_local_currency` AS `spot_cost_local_currency_amt`, 
  first_phase_table.`miscelaneous_cost_local_currency` AS `misc_cost_local_currency_amt`, 
  first_phase_table.`tfts_load_tmstp` AS `tfts_load_date`, 
  first_phase_table.`load_from_file` AS `load_from_file_url`, 
  first_phase_table.`carrier_id` AS `carr_id`, 
  first_phase_table.`bd_mod_tmstp` AS `row_modify_tmstp`, 
  first_phase_table.`freight_auction` AS `freight_auction_val`, 
  first_phase_table.`historical_data_structure_flag` AS `hist_data_structure_flag`, 
  first_phase_table.`origin_longitude` AS `origin_longitude_val`, 
  first_phase_table.`origin_latitude` AS `origin_latitude_val`, 
  first_phase_table.`destination_longitude` AS `dest_longitude_val`, 
  first_phase_table.`destination_latitude` AS `dest_latitude_val`, 
  first_phase_table.`destination_postal` AS `dest_postal_code`, 
  first_phase_table.`5_digit_lane_name` AS `five_digit_lane_name`, 
  first_phase_table.`regional_2_3_digit_lane_name` AS `region_2_3_digit_lane_name`, 
  first_phase_table.`customer_specific_lane_name` AS `customer_specific_lane_name`, 
  first_phase_table.`customer_l1` AS `customer1_lvl`, 
  first_phase_table.`customer_l2` AS `customer2_lvl`, 
  first_phase_table.`customer_l3` AS `customer3_lvl`, 
  first_phase_table.`customer_l4` AS `customer4_lvl`, 
  first_phase_table.`customer_l5` AS `customer5_lvl`, 
  first_phase_table.`customer_l6` AS `customer6_lvl`, 
  first_phase_table.`customer_l7` AS `customer7_lvl`, 
  first_phase_table.`customer_l8` AS `customer8_lvl`, 
  first_phase_table.`customer_l9` AS `customer9_lvl`, 
  first_phase_table.`customer_l10` AS `customer10_lvl`, 
  first_phase_table.`customer_l11` AS `customer11_lvl`, 
  first_phase_table.`customer_l12` AS `customer12_lvl`, 
  first_phase_table.`carrier_&_sourced_service` AS `carr_and_source_service_val`, 
  first_phase_table.`accrual_cost` AS `accrual_cost_amt`, 
  first_phase_table.`line_haul_cost` AS `line_haul_cost_amt`, 
  first_phase_table.`fuel_cost` AS `fuel_cost_amt`, 
  IF(
    first_phase_table.`contracted_cost` IS NULL, 
    0, first_phase_table.`contracted_cost`
  )- IF(
    first_phase_table.`line_haul_cost` IS NULL, 
    0, first_phase_table.`line_haul_cost`
  )- IF(
    first_phase_table.`fuel_cost` IS NULL, 
    0, first_phase_table.`fuel_cost`
  ) AS `other_contract_cost_amt`, 
  IF(
    first_phase_table.`line_haul_cost` IS NULL, 
    0, first_phase_table.`line_haul_cost`
  )+ IF(
    first_phase_table.`fuel_cost` IS NULL, 
    0, first_phase_table.`fuel_cost`
  ) AS `frcst_cost_amt`, 
  first_phase_table.`ave_total_transportation_costs_per_paller` AS `ave_total_trans_cost_per_pallet_amt`, 
  first_phase_table.`total_transportation_costs_per_lb` AS `total_trans_cost_per_lb_amt`, 
  first_phase_table.`total_transportation_costs_per_f3_volume` AS `total_trans_cost_per_cubic_feet_volume_amt`, 
  first_phase_table.`total_transportation_costs_per_mile` AS `total_trans_cost_per_mile_amt`, 
  first_phase_table.`total_transportation_costs_per_su` AS `total_trans_cost_per_su_amt`, 
  first_phase_table.`accrued_contracted_cost` AS `accrued_contract_cost_amt`, 
  first_phase_table.`accrued_line_haul_cost` AS `accrued_line_haul_cost_amt`, 
  first_phase_table.`accrued_fuel_cost` AS `accrued_fuel_cost_amt`, 
  first_phase_table.`accrued_other_contract_costs` AS `accrued_other_contract_cost_amt`, 
  first_phase_table.`accrued_spot_rate_charges` AS `accrued_spot_charge_rate`, 
  first_phase_table.`post_charges_cost` AS `post_charge_cost_amt`, 
  first_phase_table.`misc_cost` AS `misc_cost_amt`, 
  first_phase_table.`contracted_cost` AS `contract_cost_amt`, 
  first_phase_table.`multi_tdc_val` AS `multi_tdcval_code`, 
  first_phase_table.`minimum_charge` AS `min_charge_amt`, 
  first_phase_table.`charge_reason_freight_concentration` AS `charge_reason_freight_concat_name`, 
  first_phase_table.`avoidable_touch` AS `avoidbl_touch_val`, 
  first_phase_table.`operational_freight_type` AS `opertn_freight_type_code`, 
  first_phase_table.`truckload_vs_intermodal` AS `truckload_vs_intermodal_val`, 
  first_phase_table.`pgp_flag` AS `pgp_flag`, 
  first_phase_table.`freight_type` AS `freight_type_val`, 
  first_phase_table.`1st_tendered_carrier` AS `first_tender_carr_name`, 
  first_phase_table.`serv_tms_code` AS `service_tms_code`, 
  first_phase_table.distance_per_load AS `distance_per_load_qty`, 
  first_phase_table.`historical_data` AS `hist_data` 
FROM 
  (
    SELECT 
      joined_table.`shpmt_id` AS `shpmt_id`, 
      joined_table.`orign_zone_for_tfs_name` AS `orign_zone_for_tfs_name`, 
      joined_table.`destination_zone` AS `destination_zone`, 
      joined_table.`ship_to_party_desc` AS `ship_to_party_description`, 
      joined_table.`customer_description` AS `customer_description`, 
      joined_table.`carr_desc` AS `carrier_description`, 
      joined_table.`voucher_type_code` AS `voucher_type`, 
      joined_table.`tdc_val_code` AS `tdc_val_code`, 
      joined_table.`frt_cost_chrg_code` AS `freight_cost_charge`, 
      joined_table.`fcc_desc` AS `tms_freight_charge_description`, 
      joined_table.`freight_charge_description_2` AS `freight_charge_description_2`, 
      joined_table.`flow_reason` AS `flow_reason`, 
      joined_table.`accessorial_reason` AS `accessorial_reason`, 
      joined_table.`total_transportation_cost_usd` AS `total_transportation_cost_usd`, 
      IF(
        joined_table.`crncy_code` = 'USD', 
        joined_table.`adjmt_cost_amt`, 
        IF(
          joined_table.`exchg_rate` IS NOT NULL, 
          joined_table.`adjmt_cost_amt` * joined_table.`exchg_rate`, 
          NULL
        )
      ) AS `adjustment_cost_usd`, 
      IF(
        joined_table.`crncy_code` = 'USD', 
        joined_table.`cntrctd_cost_amt`, 
        IF(
          joined_table.`exchg_rate` IS NOT NULL, 
          joined_table.`cntrctd_cost_amt` * joined_table.`exchg_rate`, 
          NULL
        )
      ) AS `contracted_cost_usd`, 
      IF(
        joined_table.`crncy_code` = 'USD', 
        joined_table.`post_chrgs_cost_amt`, 
        IF(
          joined_table.`exchg_rate` IS NOT NULL, 
          joined_table.`post_chrgs_cost_amt` * joined_table.`exchg_rate`, 
          NULL
        )
      ) AS `post_charge_cost_usd`, 
      IF(
        joined_table.`crncy_code` = 'USD', 
        joined_table.`spot_rate_chrgs_amt`, 
        IF(
          joined_table.`exchg_rate` IS NOT NULL, 
          joined_table.`spot_rate_chrgs_amt` * joined_table.`exchg_rate`, 
          NULL
        )
      ) AS `spot_cost_usd`, 
      IF(
        joined_table.`crncy_code` = 'USD', 
        joined_table.`misc_cost_amt`, 
        IF(
          joined_table.`exchg_rate` IS NOT NULL, 
          joined_table.`misc_cost_amt` * joined_table.`exchg_rate`, 
          NULL
        )
      ) AS `miscelaneous_cost_usd`, 
      joined_table.`wght_per_shpmt_per_dlvry_qty` AS `wight_per_load`, 
      joined_table.`vol_per_shpmt_per_dlvry_qty` AS `volume_per_load`, 
      joined_table.`floor_postn_qty` AS `floor_positions_as_shipped`, 
      joined_table.`pllts_thrcl_qty` AS `theoretical_pallets`, 
      joined_table.`gi_goods_issue_shpmt_date` AS `actual_gi_date`, 
      joined_table.`reasn_code` AS `charge_code_reason_code`, 
      joined_table.`dlvry_id` AS `delivery_id_#`, 
      joined_table.`proft_center_code` AS `proft_center_code`, 
      joined_table.`ctrng_area_code` AS `ctrng_area_code`, 
      joined_table.`dstnc_qty` AS `distance`, 
      joined_table.`dstnc_uom` AS `distance_unit_of_measure`, 
      joined_table.`wght_tot_qty` AS `total_weight_as_shipped`, 
      joined_table.`wght_uom` AS `weight_unit_of_measure`, 
      joined_table.`vol_qty` AS `total_volume_as_shipped`, 
      joined_table.`vol_uom` AS `volume_unit_of_measure`, 
      joined_table.`crncy_code` AS `currency`, 
      joined_table.`su_per_shpmt_qty` AS `#su_per_load`, 
      joined_table.`regn_from_code` AS `region_from_code`, 
      joined_table.`regn_to_code` AS `region_to_description`, 
      joined_table.`cntry_to_code` AS `country_to`, 
      joined_table.`categ_code` AS `category_code`, 
      joined_table.`sectr_name` AS `sector_description`, 
      joined_table.`sbstr_name` AS `subsector_description`, 
      joined_table.`voucher_sttus_name` AS `voucher_status`, 
      joined_table.`voucher_ref_num` AS `voucher_reference_#`, 
      joined_table.`cntry_from_desc` AS `country_from_description`, 
      joined_table.`cntry_to_desc` AS `country_to_description`, 
      joined_table.`equip_mode_desc` AS `equipment_mode_description`, 
      joined_table.`regn_from_desc` AS `region_from_description`, 
      joined_table.`table_uom` AS `table_uom`, 
      joined_table.`ship_point_desc` AS `origin_description`, 
      joined_table.`cost_center_id` AS `cost_center`, 
      joined_table.`voucher_id` AS `voucher_id`, 
      joined_table.`multi_stop_ind` AS `multi_stop_flag`, 
      joined_table.`temp_protect_ind` AS `temp_protect`, 
      joined_table.`spot_flag_val` AS `spot_flag_val`, 
      joined_table.`gbu_code` AS `gbu_code`, 
      joined_table.`gr_posting_date` AS `goods_receipt_posting_date`, 
      joined_table.`created_datetm` AS `created_time`, 
      joined_table.`created_date` AS `created_date`, 
      joined_table.`na_trgt_cntry_code` AS `na_target_country_code`, 
      joined_table.`ship_to_num` AS `ship_to_#`, 
      joined_table.`ship_point_code` AS `shipping_point_code`, 
      joined_table.`trans_plan_point_code` AS `transportation_planning_point`, 
      joined_table.`equip_mode_code` AS `equipment_mode_code`, 
      joined_table.`trnsp_type_code` AS `transportation_equipment_type_code`, 
      joined_table.`frt_type_code` AS `freight_type_customer_interplant_indicator`, 
      joined_table.`cntry_from_code` AS `country_from_code`, 
      joined_table.`chrg_level_for_tms_intfc_name` AS `charge_level_description`, 
      joined_table.`chrg_kind_for_tms_intfc_name` AS `charge_kind_description`, 
      joined_table.`reasn_code_tms_intfc` AS `reason_code_cost_tms_interface`, 
      joined_table.`chart_acct_num` AS `chart_acct_num`, 
      joined_table.`steps_num` AS `steps`, 
      joined_table.`company_code` AS `company_code`, 
      joined_table.`tdc_val_desc` AS `tdc_val_description`, 
      joined_table.`bill_frt_created_date` AS `freight_bill_created_date`, 
      joined_table.`dlvry_item_count` AS `dlvry_item_count`, 
      joined_table.`carr_country_name` AS `carr_country_name`, 
      joined_table.`carr_country_code` AS `carr_country_code`, 
      joined_table.`carr_postal_code` AS `carr_postal_code`, 
      joined_table.`ship_to_postal_code` AS `ship_to_postal_code`, 
      joined_table.`ship_to_state_code` AS `ship_to_state_code`, 
      joined_table.`ship_to_state_name` AS `ship_to_state_name`, 
      joined_table.`minority_ind_val` AS `minority_ind_val`, 
      joined_table.`dest_zone_go_name` AS `dest_zone_go_name`, 
      joined_table.`origin_zone_name` AS `origin_zone_name`, 
      joined_table.`dest_loc_code` AS `dest_loc_code`, 
      joined_table.`chrg_detail_id` AS `charge_detail_id`, 
      joined_table.`matl_doc_num` AS `material_document_#`, 
      joined_table.`purch_doc_num` AS `purchasing_document_#`, 
      joined_table.`chrg_kindc_num` AS `charge_kind_code`, 
      joined_table.`chrg_level_num` AS `charge_level_code`, 
      joined_table.`billg_prpsl_num` AS `billing_proposal_no`, 
      joined_table.`gl_acct_num` AS `gl_account_#`, 
      joined_table.`shpmt_dlvry_pllts_qty` AS `underlying_data_for_pallets_calc2`, 
      joined_table.`pllt_qty` AS `underlying_data_for_pallets_calc`, 
      joined_table.`tot_trans_costs_amt` AS `total_transportation_cost_local_currency`, 
      joined_table.`step_cost_intfc_tms_amt` AS `cost_on_step_local_currency`, 
      joined_table.`adjmt_cost_amt` AS `adjustment_cost_local_currency`, 
      joined_table.`cntrctd_cost_amt` AS `contracted_cost_local_currency`, 
      joined_table.`post_chrgs_cost_amt` AS `post_charge_cost_local_currency`, 
      joined_table.`spot_rate_chrgs_amt` AS `spot_cost_local_currency`, 
      joined_table.`misc_cost_amt` AS `miscelaneous_cost_local_currency`, 
      joined_table.`tfts_load_tmstp` AS `tfts_load_tmstp`, 
      joined_table.`load_from_file` AS `load_from_file`, 
      joined_table.`carr_id` AS `carrier_id`, 
      joined_table.`bd_mod_tmstp` AS `bd_mod_tmstp`, 
      joined_table.`frt_auction_ind` AS `freight_auction`, 
      '-' AS `historical_data_structure_flag`, 
      '-' AS `origin_longitude`, 
      '-' AS `origin_latitude`, 
      '-' AS `destination_longitude`, 
      '-' AS `destination_latitude`, 
      joined_table.`destination_postal` AS `destination_postal`, 
      IF(
        joined_table.`frt_type_name` LIKE '%Interplant%', 
        CONCAT_WS(
          ' ', joined_table.`orign_zone_code`, 
          'To', joined_table.`destination_zone`
        ), 
        IF(
          joined_table.`cntry_to_code` LIKE '%CA%', 
          CONCAT_WS(
            ' ', 
            joined_table.`orign_zone_code`, 
            'To', 
            REGEXP_REPLACE(
              joined_table.`destination_zone`, 
              ' ', ''
            )
          ), 
          CONCAT_WS(
            ' ', joined_table.`orign_zone_code`, 
            'To', joined_table.`destination_zone`
          )
        )
      ) AS `5_digit_lane_name`, 
      IF(
        joined_table.`frt_type_name` LIKE '%Interplant%', 
        CONCAT_WS(
          ' ', joined_table.`orign_zone_code`, 
          'To', joined_table.`destination_zone`
        ), 
        IF(
          joined_table.`cntry_to_code` LIKE '%US%', 
          CONCAT_WS(
            ' ', 
            joined_table.`orign_zone_code`, 
            'To', 
            SUBSTR(
              joined_table.`destination_zone`, 
              1, 2
            )
          ), 
          IF(
            joined_table.`cntry_to_code` LIKE '%CA%', 
            CONCAT_WS(
              ' ', 
              joined_table.`orign_zone_code`, 
              'To', 
              SUBSTR(
                joined_table.`destination_zone`, 
                1, 3
              )
            ), 
            CONCAT_WS(
              ' ', joined_table.`orign_zone_code`, 
              'To', joined_table.`destination_zone`
            )
          )
        )
      ) AS `regional_2_3_digit_lane_name`, 
      CONCAT_WS(
        ' ', joined_table.`orign_zone_code`, 
        'To', joined_table.`ship_to_num`
      ) AS `customer_specific_lane_name`, 
      joined_table.`customer_l1` AS `customer_l1`, 
      joined_table.`customer_l2` AS `customer_l2`, 
      joined_table.`customer_l3` AS `customer_l3`, 
      joined_table.`customer_l4` AS `customer_l4`, 
      joined_table.`customer_l5` AS `customer_l5`, 
      joined_table.`customer_l6` AS `customer_l6`, 
      joined_table.`customer_l7` AS `customer_l7`, 
      joined_table.`customer_l8` AS `customer_l8`, 
      joined_table.`customer_l9` AS `customer_l9`, 
      joined_table.`customer_l10` AS `customer_l10`, 
      joined_table.`customer_l11` AS `customer_l11`, 
      joined_table.`customer_l12` AS `customer_l12`, 
      '-' AS `carrier_&_sourced_service`, 
      IF(
        joined_table.`billg_prpsl_num` = 'ACCRUAL' 
        AND CAST(
          joined_table.`matl_doc_num` AS INT
        )= 0 
        AND CAST(
          CONCAT(
            SUBSTR(
              joined_table.`gr_posting_date`, 
              7, 4
            ), 
            SUBSTR(
              joined_table.`gr_posting_date`, 
              4, 2
            )
          ) as INT
        )< CONCAT(
          SUBSTR(CURRENT_DATE, 1, 4), 
          SUBSTR(CURRENT_DATE, 6, 2)
        ), 
        joined_table.`step_cost_intfc_tms_amt`, 
        NULL
      ) AS `accrual_cost`, 
      IF(
        joined_table.`frt_cost_chrg_code` IN(
          'DST', 'DIST', 'FLAT', 'FLT', 'LFLT', 
          'CVY1', 'HJBT', 'KNIG', 'L2D', 'SCNN', 
          'UFLB', 'USX1', 'PGL1'
        ), 
        joined_table.`total_transportation_cost_usd`, 
        NULL
      ) AS `line_haul_cost`, 
      IF(
        joined_table.`frt_cost_chrg_code` IN(
          'BTF', 'FU_S', 'FSUR', 'FFLT', 'FUSUR', 
          'FUSU', 'FUSUR1', 'FU_SUR'
        ), 
        joined_table.`total_transportation_cost_usd`, 
        NULL
      ) AS `fuel_cost`, 
      '-' AS `other_contract_costs`, 
      '-' AS `forecast_cost`, 
      '-' AS `ave_total_transportation_costs_per_paller`, 
      joined_table.`tot_trans_costs_amt` / joined_table.`wght_tot_qty` AS `total_transportation_costs_per_lb`, 
      joined_table.`tot_trans_costs_amt` / joined_table.`vol_qty` AS `total_transportation_costs_per_f3_volume`, 
      joined_table.`tot_trans_costs_amt` / joined_table.`dstnc_qty` AS `total_transportation_costs_per_mile`, 
      joined_table.`tot_trans_costs_amt` / joined_table.`su_per_shpmt_qty` AS `total_transportation_costs_per_su`, 
      '-' AS `accrued_contracted_cost`, 
      '-' AS `accrued_line_haul_cost`, 
      '-' AS `accrued_fuel_cost`, 
      '-' AS `accrued_other_contract_costs`, 
      '-' AS `accrued_spot_rate_charges`, 
      IF(
        joined_table.`chrg_kind_for_tms_intfc_name` = 'POST CHARGE', 
        joined_table.`tot_trans_costs_amt`, 
        NULL
      ) AS `post_charges_cost`, 
      IF(
        joined_table.`chrg_kind_for_tms_intfc_name` = 'MISCELLANEOUS CHARGE', 
        joined_table.`tot_trans_costs_amt`, 
        NULL
      ) AS `misc_cost`, 
      joined_table.`contracted_cost` AS `contracted_cost`, 
      IF(
        joined_table.`tdc_val_code_count` > 1, 
        1, 0
      ) AS `multi_tdc_val`, 
      '-' AS `minimum_charge`, 
      CONCAT(
        joined_table.`chrg_kind_for_tms_intfc_name`, 
        ' ', joined_table.`reasn_code`, 
        ' ', joined_table.frt_cost_chrg_code
      ) AS `charge_reason_freight_concentration`, 
      '-' AS `avoidable_touch`, 
      joined_table.`operational_freight_type` AS `operational_freight_type`, 
      IF(
        joined_table.`tdc_val_desc` LIKE '%PGP%', 
        1, 0
      ) as `pgp_flag`, 
      joined_table.`freight_type` AS `freight_type`, 
      joined_table.`truckload_vs_intermodal` AS `truckload_vs_intermodal`, 
      joined_table.`1st_tendered_carrier` AS `1st_tendered_carrier`, 
      joined_table.`serv_tms_code` AS `serv_tms_code`, 
      joined_table.first_tendered_carrier_id AS first_tendered_carrier_id, 
      joined_table.first_tendered_carrier_description AS first_tendered_carrier_description, 
      joined_table.first_tendered_carrier_tms_service AS `first_tendered_carrier_tms_service`, 
      joined_table.first_tendered_carrier_award AS `first_tendered_carrier_award`, 
      joined_table.first_tendered_carrier_rate AS `first_tendered_carrier_rate`, 
      joined_table.weighted_average_rate AS `weighted_average_rate`, 
      joined_table.distance_per_load AS `distance_per_load`, 
      joined_table.`historical_data` AS `historical_data` 
    FROM 
      (
        SELECT 
          freight_stats_na_merged_star.`shpmt_id` AS `shpmt_id`, 
          freight_stats_na_merged_star.`purch_doc_num` AS `purch_doc_num`, 
          freight_stats_na_merged_star.`voucher_type_code` AS `voucher_type_code`, 
          freight_stats_na_merged_star.`billg_prpsl_num` AS `billg_prpsl_num`, 
          freight_stats_na_merged_star.`frt_cost_chrg_code` AS `frt_cost_chrg_code`, 
          freight_stats_na_merged_star.`chrg_kindc_num` AS `chrg_kindc_num`, 
          freight_stats_na_merged_star.`chrg_level_num` AS `chrg_level_num`, 
          freight_stats_na_merged_star.`reasn_code` AS `reasn_code`, 
          freight_stats_na_merged_star.`chrg_detail_id` AS `chrg_detail_id`, 
          freight_stats_na_merged_star.`matl_doc_num` AS `matl_doc_num`, 
          freight_stats_na_merged_star.`dlvry_id` AS `dlvry_id`, 
          freight_stats_na_merged_star.`tdc_val_code` AS `tdc_val_code`, 
          freight_stats_na_merged_star.`proft_center_code` AS `proft_center_code`, 
          freight_stats_na_merged_star.`ctrng_area_code` AS `ctrng_area_code`, 
          freight_stats_na_merged_star.`carr_id` AS `carr_id`, 
          freight_stats_na_merged_star.`cost_center_id` AS `cost_center_id`, 
          freight_stats_na_merged_star.`dstnc_qty` AS `dstnc_qty`, 
          freight_stats_na_merged_star.`dstnc_uom` AS `dstnc_uom`, 
          freight_stats_na_merged_star.`wght_tot_qty` AS `wght_tot_qty`, 
          freight_stats_na_merged_star.`wght_uom` AS `wght_uom`, 
          freight_stats_na_merged_star.`vol_qty` AS `vol_qty`, 
          freight_stats_na_merged_star.`vol_uom` AS `vol_uom`, 
          freight_stats_na_merged_star.`crncy_code` AS `crncy_code`, 
          freight_stats_na_merged_star.`shpmt_dlvry_pllts_qty` AS `shpmt_dlvry_pllts_qty`, 
          freight_stats_na_merged_star.`pllt_qty` AS `pllt_qty`, 
          freight_stats_na_merged_star.`adjmt_cost_amt` AS `adjmt_cost_amt`, 
          freight_stats_na_merged_star.`cntrctd_cost_amt` AS `cntrctd_cost_amt`, 
          freight_stats_na_merged_star.`post_chrgs_cost_amt` AS `post_chrgs_cost_amt`, 
          freight_stats_na_merged_star.`spot_rate_chrgs_amt` AS `spot_rate_chrgs_amt`, 
          freight_stats_na_merged_star.`misc_cost_amt` AS `misc_cost_amt`, 
          freight_stats_na_merged_star.`wght_per_shpmt_per_dlvry_qty` AS `wght_per_shpmt_per_dlvry_qty`, 
          freight_stats_na_merged_star.`vol_per_shpmt_per_dlvry_qty` AS `vol_per_shpmt_per_dlvry_qty`, 
          freight_stats_na_merged_star.`tot_trans_costs_amt` AS `tot_trans_costs_amt`, 
          freight_stats_na_merged_star.`step_cost_intfc_tms_amt` AS `step_cost_intfc_tms_amt`, 
          freight_stats_na_merged_star.`floor_postn_qty` AS `floor_postn_qty`, 
          freight_stats_na_merged_star.`pllts_thrcl_qty` AS `pllts_thrcl_qty`, 
          freight_stats_na_merged_star.`regn_from_code` AS `regn_from_code`, 
          freight_stats_na_merged_star.`regn_to_code` AS `regn_to_code`, 
          freight_stats_na_merged_star.`cntry_to_code` AS `cntry_to_code`, 
          IF(
            matl_doc_num_and_bop.product_category_material IS NOT NULL, 
            matl_doc_num_and_bop.product_category_material, 
            tdc_val_and_bop.product_category_tdc
          ) AS `categ_code`, 
          freight_stats_na_merged_star.`sectr_name` AS `sectr_name`, 
          IF(
            matl_doc_num_and_bop.bu_material IS NOT NULL, 
            matl_doc_num_and_bop.bu_material, 
            tdc_val_and_bop.bu_tdc
          ) AS `sbstr_name`, 
          freight_stats_na_merged_star.`voucher_sttus_name` AS `voucher_sttus_name`, 
          freight_stats_na_merged_star.`voucher_ref_num` AS `voucher_ref_num`, 
          freight_stats_na_merged_star.`cntry_from_desc` AS `cntry_from_desc`, 
          freight_stats_na_merged_star.`cntry_to_desc` AS `cntry_to_desc`, 
          freight_stats_na_merged_star.`carr_desc` AS `carr_desc`, 
          freight_stats_na_merged_star.`equip_mode_desc` AS `equip_mode_desc`, 
          freight_stats_na_merged_star.`regn_from_desc` AS `regn_from_desc`, 
          freight_stats_na_merged_star.`table_uom` AS `table_uom`, 
          freight_stats_na_merged_star.`ship_to_party_desc` AS `ship_to_party_desc`, 
          freight_stats_na_merged_star.`ship_point_desc` AS `ship_point_desc`, 
          freight_stats_na_merged_star.`voucher_id` AS `voucher_id`, 
          freight_stats_na_merged_star.`multi_stop_ind` AS `multi_stop_ind`, 
          freight_stats_na_merged_star.`temp_protect_ind` AS `temp_protect_ind`, 
          freight_stats_na_merged_star.`spot_flag_val` AS `spot_flag_val`, 
          freight_stats_na_merged_star.`gbu_code` AS `gbu_code`, 
          freight_stats_na_merged_star.`gr_posting_date` AS `gr_posting_date`, 
          freight_stats_na_merged_star.`created_datetm` AS `created_datetm`, 
          freight_stats_na_merged_star.`created_date` AS `created_date`, 
          freight_stats_na_merged_star.`na_trgt_cntry_code` AS `na_trgt_cntry_code`, 
          freight_stats_na_merged_star.`ship_to_num` AS `ship_to_num`, 
          freight_stats_na_merged_star.`gi_goods_issue_shpmt_date` AS `gi_goods_issue_shpmt_date`, 
          freight_stats_na_merged_star.`ship_point_code` AS `ship_point_code`, 
          freight_stats_na_merged_star.`trans_plan_point_code` AS `trans_plan_point_code`, 
freight_stats_na_merged_star.`equip_mode_code` AS `equip_mode_code`,
freight_stats_na_merged_star.`trnsp_type_code` AS `trnsp_type_code`,
freight_stats_na_merged_star.`frt_type_code` AS `frt_type_code`,
CASE
    WHEN LENGTH(freight_stats_na_merged_star.`orign_zone_for_tfs_name`) = 60 
         AND INSTR(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, '-') = 56 
         THEN SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, 51, 5)
         
    WHEN LENGTH(freight_stats_na_merged_star.`orign_zone_for_tfs_name`) = 60 
         AND SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, 51, 8) = '00000000' 
         THEN SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, LENGTH(freight_stats_na_merged_star.`orign_zone_for_tfs_name`) - 1, 2)

    WHEN LENGTH(freight_stats_na_merged_star.`orign_zone_for_tfs_name`) = 60 
         AND SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, 51, 7) = '0000000' 
         THEN SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, LENGTH(freight_stats_na_merged_star.`orign_zone_for_tfs_name`) - 2, 3)

    WHEN LENGTH(freight_stats_na_merged_star.`orign_zone_for_tfs_name`) = 60 
         AND SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, 51, 5) = '00000' 
         THEN SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, LENGTH(freight_stats_na_merged_star.`orign_zone_for_tfs_name`) - 4, 5)

    WHEN LENGTH(freight_stats_na_merged_star.`orign_zone_for_tfs_name`) = 60 
         AND SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, 51, 4) = '0000' 
         THEN SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, LENGTH(freight_stats_na_merged_star.`orign_zone_for_tfs_name`) - 5, 6)

    WHEN LENGTH(freight_stats_na_merged_star.`orign_zone_for_tfs_name`) = 60 
         AND SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, 51, 3) = '000' 
         THEN CONCAT(
             SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, 54, 3), 
             SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, 58, 3)
         )

    WHEN LENGTH(freight_stats_na_merged_star.`orign_zone_for_tfs_name`) = 60 
         THEN SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, LENGTH(freight_stats_na_merged_star.`orign_zone_for_tfs_name`) - 9, 10)

    WHEN LENGTH(freight_stats_na_merged_star.`orign_zone_for_tfs_name`) = 7 
         AND POSITION(' ' IN freight_stats_na_merged_star.`orign_zone_for_tfs_name`) > 0 
         THEN CONCAT(
             SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, 1, 3), 
             SUBSTRING(freight_stats_na_merged_star.`orign_zone_for_tfs_name`, 5, 3)
         )

    WHEN freight_stats_na_merged_star.`orign_zone_for_tfs_name` IS NULL 
         THEN shipping_location.`corporate id 2`

    ELSE freight_stats_na_merged_star.`orign_zone_for_tfs_name`
          END AS `orign_zone_for_tfs_name`,
          freight_stats_na_merged_star.`cntry_from_code` AS `cntry_from_code`, 
          freight_stats_na_merged_star.`chrg_level_for_tms_intfc_name` AS `chrg_level_for_tms_intfc_name`, 
          freight_stats_na_merged_star.`chrg_kind_for_tms_intfc_name` AS `chrg_kind_for_tms_intfc_name`, 
          freight_stats_na_merged_star.`reasn_code_tms_intfc` AS `reasn_code_tms_intfc`, 
          freight_stats_na_merged_star.`su_per_shpmt_qty` AS `su_per_shpmt_qty`, 
          freight_stats_na_merged_star.`gl_acct_num` AS `gl_acct_num`, 
          freight_stats_na_merged_star.`chart_acct_num` AS `chart_acct_num`, 
          freight_stats_na_merged_star.`steps_num` AS `steps_num`, 
          freight_stats_na_merged_star.`company_code` AS `company_code`, 
          freight_stats_na_merged_star.`tdc_val_desc` AS `tdc_val_desc`, 
          freight_stats_na_merged_star.`bill_frt_created_date` AS `bill_frt_created_date`, 
          freight_stats_na_merged_star.`dlvry_item_count` AS `dlvry_item_count`, 
          freight_stats_na_merged_star.`carr_country_name` AS `carr_country_name`, 
          freight_stats_na_merged_star.`carr_country_code` AS `carr_country_code`, 
          freight_stats_na_merged_star.`carr_postal_code` AS `carr_postal_code`, 
          freight_stats_na_merged_star.`ship_to_postal_code` AS `ship_to_postal_code`, 
          freight_stats_na_merged_star.`ship_to_state_code` AS `ship_to_state_code`, 
          freight_stats_na_merged_star.`ship_to_state_name` AS `ship_to_state_name`, 
          freight_stats_na_merged_star.`minority_ind_val` AS `minority_ind_val`, 
          CASE WHEN LENGTH(
            freight_stats_na_merged_star.`dest_zone_go_val`
          ) = 60 
          AND INSTR(
            freight_stats_na_merged_star.`dest_zone_go_val`, 
            '-'
          ) = 56 THEN SUBSTR(
            freight_stats_na_merged_star.`dest_zone_go_val`, 
            51, 5
          ) # US Zip+4 - We want only five digit US zip code 
          WHEN LENGTH(
            freight_stats_na_merged_star.`dest_zone_go_val`
          ) = 60 
          AND SUBSTR(
            freight_stats_na_merged_star.`dest_zone_go_val`, 
            51, 8
          ) = '00000000' THEN SUBSTR(
            freight_stats_na_merged_star.`dest_zone_go_val`, 
            -2
          ) # two digit zip code
          WHEN LENGTH(
            freight_stats_na_merged_star.`dest_zone_go_val`
          ) = 60 
          AND SUBSTR(
            freight_stats_na_merged_star.`dest_zone_go_val`, 
            51, 7
          ) = '0000000' THEN SUBSTR(
            freight_stats_na_merged_star.`dest_zone_go_val`, 
            -3
          ) # three digit zip code
          WHEN LENGTH(
            freight_stats_na_merged_star.`dest_zone_go_val`
          ) = 60 
          AND SUBSTR(
            freight_stats_na_merged_star.`dest_zone_go_val`, 
            51, 5
          ) = '00000' THEN SUBSTR(
            freight_stats_na_merged_star.`dest_zone_go_val`, 
            -5
          ) # US Zip Code
          WHEN LENGTH(
            freight_stats_na_merged_star.`dest_zone_go_val`
          ) = 60 
          AND SUBSTR(
            freight_stats_na_merged_star.`dest_zone_go_val`, 
            51, 4
          ) = '0000' THEN SUBSTR(
            freight_stats_na_merged_star.`dest_zone_go_val`, 
            -6
          ) # Canada Zip Code with no space in it
          WHEN LENGTH(
            freight_stats_na_merged_star.`dest_zone_go_val`
          ) = 60 
          AND SUBSTR(
            freight_stats_na_merged_star.`dest_zone_go_val`, 
            51, 3
          ) = '000' THEN CONCAT(
            SUBSTR(
              freight_stats_na_merged_star.`dest_zone_go_val`, 
              54, 3
            ), 
            SUBSTR(
              freight_stats_na_merged_star.`dest_zone_go_val`, 
              58, 3
            )
          ) # Canada Zip Code with space in it
          WHEN LENGTH(
            freight_stats_na_merged_star.`dest_zone_go_val`
          ) = 60 THEN SUBSTR(
            freight_stats_na_merged_star.`dest_zone_go_val`, 
            -10
          ) # Ship To Party or Customer ID
          WHEN LENGTH(
            freight_stats_na_merged_star.`dest_zone_go_val`
          ) = 7 
          AND LOCATE(
            ' ', freight_stats_na_merged_star.`dest_zone_go_val`
          ) > 0 THEN CONCAT(
            SUBSTR(
              freight_stats_na_merged_star.`dest_zone_go_val`, 
              1, 3
            ), 
            SUBSTR(
              freight_stats_na_merged_star.`dest_zone_go_val`, 
              5, 3
            )
          ) # Canada Zip Code with space in it
          ELSE freight_stats_na_merged_star.`dest_zone_go_val` END AS `dest_zone_go_name`, 
          CASE WHEN LENGTH(
            freight_stats_na_merged_star.`origin_zone_name`
          ) = 60 
          AND INSTR(
            freight_stats_na_merged_star.`origin_zone_name`, 
            '-'
          ) = 56 THEN SUBSTR(
            freight_stats_na_merged_star.`origin_zone_name`, 
            51, 5
          ) # US Zip+4 - We want only five digit US zip code 
          WHEN LENGTH(
            freight_stats_na_merged_star.`origin_zone_name`
          ) = 60 
          AND SUBSTR(
            freight_stats_na_merged_star.`origin_zone_name`, 
            51, 8
          ) = '00000000' THEN SUBSTR(
            freight_stats_na_merged_star.`origin_zone_name`, 
            -2
          ) # two digit zip code
          WHEN LENGTH(
            freight_stats_na_merged_star.`origin_zone_name`
          ) = 60 
          AND SUBSTR(
            freight_stats_na_merged_star.`origin_zone_name`, 
            51, 7
          ) = '0000000' THEN SUBSTR(
            freight_stats_na_merged_star.`origin_zone_name`, 
            -3
          ) # three digit zip code
          WHEN LENGTH(
            freight_stats_na_merged_star.`origin_zone_name`
          ) = 60 
          AND SUBSTR(
            freight_stats_na_merged_star.`origin_zone_name`, 
            51, 5
          ) = '00000' THEN SUBSTR(
            freight_stats_na_merged_star.`origin_zone_name`, 
            -5
          ) # US Zip Code
          WHEN LENGTH(
            freight_stats_na_merged_star.`origin_zone_name`
          ) = 60 
          AND SUBSTR(
            freight_stats_na_merged_star.`origin_zone_name`, 
            51, 4
          ) = '0000' THEN SUBSTR(
            freight_stats_na_merged_star.`origin_zone_name`, 
            -6
          ) # Canada Zip Code with no space in it
          WHEN LENGTH(
            freight_stats_na_merged_star.`origin_zone_name`
          ) = 60 
          AND SUBSTR(
            freight_stats_na_merged_star.`origin_zone_name`, 
            51, 3
          ) = '000' THEN CONCAT(
            SUBSTR(
              freight_stats_na_merged_star.`origin_zone_name`, 
              54, 3
            ), 
            SUBSTR(
              freight_stats_na_merged_star.`origin_zone_name`, 
              58, 3
            )
          ) # Canada Zip Code with space in it
          WHEN LENGTH(
            freight_stats_na_merged_star.`origin_zone_name`
          ) = 60 THEN SUBSTR(
            freight_stats_na_merged_star.`origin_zone_name`, 
            -10
          ) # Ship To Party or Customer ID
          WHEN LENGTH(
            freight_stats_na_merged_star.`origin_zone_name`
          ) = 7 
          AND LOCATE(
            ' ', freight_stats_na_merged_star.`origin_zone_name`
          ) > 0 THEN CONCAT(
            SUBSTR(
              freight_stats_na_merged_star.`origin_zone_name`, 
              1, 3
            ), 
            SUBSTR(
              freight_stats_na_merged_star.`origin_zone_name`, 
              5, 3
            )
          ) # Canada Zip Code with space in it
          ELSE freight_stats_na_merged_star.`origin_zone_name` END AS `origin_zone_name`, 
          CASE WHEN LENGTH(
            joined_id_tfs_cad_tac.`dest_loc_code`
          ) = 60 
          AND INSTR(
            joined_id_tfs_cad_tac.`dest_loc_code`, 
            '-'
          ) = 56 THEN SUBSTR(
            joined_id_tfs_cad_tac.`dest_loc_code`, 
            51, 5
          ) # US Zip+4 - We want only five digit US zip code 
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`dest_loc_code`
          ) = 60 
          AND SUBSTR(
            joined_id_tfs_cad_tac.`dest_loc_code`, 
            51, 8
          ) = '00000000' THEN SUBSTR(
            joined_id_tfs_cad_tac.`dest_loc_code`, 
            -2
          ) # two digit zip code
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`dest_loc_code`
          ) = 60 
          AND SUBSTR(
            joined_id_tfs_cad_tac.`dest_loc_code`, 
            51, 7
          ) = '0000000' THEN SUBSTR(
            joined_id_tfs_cad_tac.`dest_loc_code`, 
            -3
          ) # three digit zip code
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`dest_loc_code`
          ) = 60 
          AND SUBSTR(
            joined_id_tfs_cad_tac.`dest_loc_code`, 
            51, 5
          ) = '00000' THEN SUBSTR(
            joined_id_tfs_cad_tac.`dest_loc_code`, 
            -5
          ) # US Zip Code
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`dest_loc_code`
          ) = 60 
          AND SUBSTR(
            joined_id_tfs_cad_tac.`dest_loc_code`, 
            51, 4
          ) = '0000' THEN SUBSTR(
            joined_id_tfs_cad_tac.`dest_loc_code`, 
            -6
          ) # Canada Zip Code with no space in it
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`dest_loc_code`
          ) = 60 
          AND SUBSTR(
            joined_id_tfs_cad_tac.`dest_loc_code`, 
            51, 3
          ) = '000' THEN CONCAT(
            SUBSTR(
              joined_id_tfs_cad_tac.`dest_loc_code`, 
              54, 3
            ), 
            SUBSTR(
              joined_id_tfs_cad_tac.`dest_loc_code`, 
              58, 3
            )
          ) # Canada Zip Code with space in it
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`dest_loc_code`
          ) = 60 THEN SUBSTR(
            joined_id_tfs_cad_tac.`dest_loc_code`, 
            -10
          ) # Ship To Party or Customer ID
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`dest_loc_code`
          ) = 7 
          AND LOCATE(
            ' ', joined_id_tfs_cad_tac.`dest_loc_code`
          ) > 0 THEN CONCAT(
            SUBSTR(
              joined_id_tfs_cad_tac.`dest_loc_code`, 
              1, 3
            ), 
            SUBSTR(
              joined_id_tfs_cad_tac.`dest_loc_code`, 
              5, 3
            )
          ) # Canada Zip Code with space in it
          ELSE joined_id_tfs_cad_tac.`dest_loc_code` END AS `dest_loc_code`, 
          freight_stats_na_merged_star.`tfts_load_tmstp` AS `tfts_load_tmstp`, 
          freight_stats_na_merged_star.`load_from_file` AS `load_from_file`, 
          freight_stats_na_merged_star.`bd_mod_tmstp` AS `bd_mod_tmstp`, 
          CASE WHEN LENGTH(
            joined_id_tfs_cad_tac.`destination_zone`
          ) = 60 
          AND INSTR(
            joined_id_tfs_cad_tac.`destination_zone`, 
            '-'
          ) = 56 THEN SUBSTR(
            joined_id_tfs_cad_tac.`destination_zone`, 
            51, 5
          ) # US Zip+4 - We want only five digit US zip code 
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`destination_zone`
          ) = 60 
          AND SUBSTR(
            joined_id_tfs_cad_tac.`destination_zone`, 
            51, 8
          ) = '00000000' THEN SUBSTR(
            joined_id_tfs_cad_tac.`destination_zone`, 
            -2
          ) # two digit zip code
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`destination_zone`
          ) = 60 
          AND SUBSTR(
            joined_id_tfs_cad_tac.`destination_zone`, 
            51, 7
          ) = '0000000' THEN SUBSTR(
            joined_id_tfs_cad_tac.`destination_zone`, 
            -3
          ) # three digit zip code
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`destination_zone`
          ) = 60 
          AND SUBSTR(
            joined_id_tfs_cad_tac.`destination_zone`, 
            51, 5
          ) = '00000' THEN SUBSTR(
            joined_id_tfs_cad_tac.`destination_zone`, 
            -5
          ) # US Zip Code
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`destination_zone`
          ) = 60 
          AND SUBSTR(
            joined_id_tfs_cad_tac.`destination_zone`, 
            51, 4
          ) = '0000' THEN SUBSTR(
            joined_id_tfs_cad_tac.`destination_zone`, 
            -6
          ) # Canada Zip Code with no space in it
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`destination_zone`
          ) = 60 
          AND SUBSTR(
            joined_id_tfs_cad_tac.`destination_zone`, 
            51, 3
          ) = '000' THEN CONCAT(
            SUBSTR(
              joined_id_tfs_cad_tac.`destination_zone`, 
              54, 3
            ), 
            SUBSTR(
              joined_id_tfs_cad_tac.`destination_zone`, 
              58, 3
            )
          ) # Canada Zip Code with space in it
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`destination_zone`
          ) = 60 THEN SUBSTR(
            joined_id_tfs_cad_tac.`destination_zone`, 
            -10
          ) # Ship To Party or Customer ID
          WHEN LENGTH(
            joined_id_tfs_cad_tac.`destination_zone`
          ) = 7 
          AND LOCATE(
            ' ', joined_id_tfs_cad_tac.`destination_zone`
          ) > 0 THEN CONCAT(
            SUBSTR(
              joined_id_tfs_cad_tac.`destination_zone`, 
              1, 3
            ), 
            SUBSTR(
              joined_id_tfs_cad_tac.`destination_zone`, 
              5, 3
            )
          ) # Canada Zip Code with space in it
          ELSE joined_id_tfs_cad_tac.`destination_zone` END AS `destination_zone`, 
          joined_id_tfs_cad_tac.`frt_auction_ind` AS `frt_auction_ind`, 
          cust_656_postal_codes.`cust_1_name` AS `customer_l1`, 
          cust_656_postal_codes.`cust_2_name` AS `customer_l2`, 
          cust_656_postal_codes.`cust_3_name` AS `customer_l3`, 
          cust_656_postal_codes.`cust_4_name` AS `customer_l4`, 
          cust_656_postal_codes.`cust_5_name` AS `customer_l5`, 
          cust_656_postal_codes.`cust_6_name` AS `customer_l6`, 
          cust_656_postal_codes.`cust_7_name` AS `customer_l7`, 
          cust_656_postal_codes.`cust_8_name` AS `customer_l8`, 
          cust_656_postal_codes.`cust_9_name` AS `customer_l9`, 
          cust_656_postal_codes.`cust_10_name` AS `customer_l10`, 
          cust_656_postal_codes.`cust_11_name` AS `customer_l11`, 
          cust_656_postal_codes.`cust_12_name` AS `customer_l12`, 
          cust_656_postal_codes.`postal_code` AS `destination_postal`, 
          month_exchng_rate_rds.`exchg_rate`, 
          IF(
            freight_stats_na_merged_star.`chrg_kind_for_tms_intfc_name` = 'ORIGINAL', 
            freight_stats_na_merged_star.`tot_trans_costs_amt`, 
            NULL
          ) as `contracted_cost`, 
          joined_id_tfs_cad_tac.`tdc_val_code_count` as `tdc_val_code_count`, 
          joined_id_tfs_cad_tac.orign_zone_code, 
          joined_id_tfs_cad_tac.frt_type_name, 
          CASE WHEN freight_stats_na_merged_star.`frt_type_code` LIKE '%C%' THEN 'Customer' WHEN freight_stats_na_merged_star.`frt_type_code` LIKE '%I%' THEN 'Interplant' WHEN freight_stats_na_merged_star.`frt_type_code` LIKE '%E%' 
          AND SUBSTR(
            freight_stats_na_merged_star.`ship_to_num`, 
            1, 1
          )= 'P' THEN 'Interplant' ELSE 'Customer' END AS `freight_type`, 
          IF (
            joined_id_tfs_cad_tac.truckload_vs_intermodal IS NULL, 
            'Service code not found', joined_id_tfs_cad_tac.truckload_vs_intermodal
          ) AS `truckload_vs_intermodal`, 
          tms_charge_id.`fcc_desc` AS `fcc_desc`, 
          tms_charge_id.`freight_charge_description_2` AS `freight_charge_description_2`, 
          tms_charge_id.`flow_reason` AS `flow_reason`, 
          tms_charge_id.`accessorial_reason` AS `accessorial_reason`, 
          IF(
            SUBSTR(
              freight_stats_na_merged_star.`ship_to_num`, 
              1, 1
            )= 'P' 
            AND LENGTH(
              freight_stats_na_merged_star.`ship_to_num`
            )< 7, 
            'I', 
            'C'
          ) as `operational_freight_type`, 
          CASE WHEN cust_656_postal_codes.`cust_3_name` LIKE '%AB ACQUISITION, LLC%' THEN 'ALBERTSONS SAFEWAY' WHEN cust_656_postal_codes.`cust_3_name` LIKE '%COSTCO COMPANIES, INC. (WW)%' 
          AND cust_656_postal_codes.`cust_5_name` LIKE '%COSTCO CORP US%' THEN 'COSTCO' WHEN cust_656_postal_codes.`cust_3_name` LIKE '%COSTCO COMPANIES, INC. (WW)%' 
          AND cust_656_postal_codes.`cust_5_name` LIKE '%COSTCO WHSL (CA)%' THEN 'COSTCO CANADA' WHEN cust_656_postal_codes.`cust_3_name` LIKE '%BJ%S WHOLESALE (WW)%' THEN 'BJS' WHEN cust_656_postal_codes.`cust_3_name` LIKE '%CVS CORPORATION US%' THEN 'CVS' WHEN cust_656_postal_codes.`cust_3_name` LIKE '%TARGET CORP US%' THEN 'TARGET' WHEN cust_656_postal_codes.`cust_3_name` LIKE '%WAL-MART CORP. (WW)%' 
          AND cust_656_postal_codes.`cust_5_name` LIKE 'SAM%' THEN 'SAMS' WHEN cust_656_postal_codes.`cust_3_name` LIKE '%WAL-MART CORP. (WW)%' 
          AND cust_656_postal_codes.`cust_12_name` LIKE 'SAM%' THEN 'SAMS' WHEN cust_656_postal_codes.`cust_3_name` LIKE '%WAL-MART CORP. (WW)%' 
          AND cust_656_postal_codes.`cust_5_name` NOT LIKE 'SAM%' THEN 'WALMART' WHEN cust_656_postal_codes.`cust_3_name` LIKE '%Null%' THEN freight_stats_na_merged_star.`ship_to_party_desc` WHEN cust_656_postal_codes.`cust_3_name` IS NULL THEN freight_stats_na_merged_star.`ship_to_party_desc` WHEN cust_656_postal_codes.`cust_3_name` LIKE '%THE KROGER CO. US%' THEN 'KROGER' WHEN cust_656_postal_codes.`cust_3_name` LIKE '%UNKN LVL 3 UNKNOWN CUSTOMER%' THEN freight_stats_na_merged_star.`ship_to_party_desc` ELSE cust_656_postal_codes.`cust_3_name` END AS `customer_description`, 
          IF(
            freight_stats_na_merged_star.`crncy_code` = 'USD', 
            freight_stats_na_merged_star.`tot_trans_costs_amt`, 
            IF(
              month_exchng_rate_rds.`exchg_rate` IS NOT NULL, 
              freight_stats_na_merged_star.`tot_trans_costs_amt` * month_exchng_rate_rds.`exchg_rate`, 
              NULL
            )
          ) AS `total_transportation_cost_usd`, 
          joined_id_tfs_cad_tac.carrier_desc AS `1st_tendered_carrier`, 
          joined_id_tfs_cad_tac.`serv_tms_code` AS `serv_tms_code`, 
          'first_tendered_carrier_id' AS first_tendered_carrier_id, 
          'first_tendered_carrier_description' AS first_tendered_carrier_description, 
          'first_tendered_carrier_tms_service' AS `first_tendered_carrier_tms_service`, 
          'first_tendered_carrier_award' AS `first_tendered_carrier_award`, 
          'first_tendered_carrier_rate' AS `first_tendered_carrier_rate`, 
          'weighted_average_rate' AS `weighted_average_rate`, 
          matl_doc_num_and_bop.bu_material AS `bu_matched_by_material`, 
          tdc_val_and_bop.bu_tdc AS `bu_matched_by_tdc`, 
          matl_doc_num_and_bop.product_category_material AS `category_matched_by_material`, 
          tdc_val_and_bop.product_category_tdc AS `category_matched_by_tdc`, 
          joined_id_tfs_cad_tac.dstnc_qty AS `distance_per_load`, 
          IF(
            freight_stats_na_merged_star.tfts_load_tmstp LIKE '%Historical load%', 
            1, 0
          ) AS `historical_data` 
        FROM 
          dp_trans_vsblt_bw.freight_stats_na_merged_star as freight_stats_na_merged_star 
          LEFT OUTER JOIN joined_id_tfs_cad_tac ON freight_stats_na_merged_star.`shpmt_id` = joined_id_tfs_cad_tac.`shpmt_id` 
          LEFT OUTER JOIN month_exchng_rate_rds ON concat_ws(
            '-', 
            SUBSTR(`gr_posting_date`, 7, 4), 
            SUBSTR(`gr_posting_date`, 4, 2)
          ) = month_exchng_rate_rds.`year_month` 
          LEFT OUTER JOIN tms_charge_id ON IF(
            freight_stats_na_merged_star.`frt_cost_chrg_code` RLIKE '0*510', 
            "510", freight_stats_na_merged_star.`frt_cost_chrg_code`
          )= tms_charge_id.`fcc` 
          LEFT OUTER JOIN cust_656_postal_codes ON freight_stats_na_merged_star.`ship_to_num` = cust_656_postal_codes.`ship_to_num` 
          LEFT OUTER JOIN matl_doc_num_and_bop ON freight_stats_na_merged_star.matl_doc_num = matl_doc_num_and_bop.matl_doc_num 
          LEFT OUTER JOIN tdc_val_and_bop ON freight_stats_na_merged_star.tdc_val_code = tdc_val_and_bop.tdc_val_code 
          left outer join shipping_location shipping_location on freight_stats_na_merged_star.`ship_point_code` = shipping_location.`location id`
      ) joined_table
  ) first_phase_table 
  left outer join dest_loc_id_from_tac temp_tfs on first_phase_table.`shpmt_id` = temp_tfs.load_id 
  and upper(
    first_phase_table.`freight_type`
  ) = upper(temp_tfs.freight_type_code);
"""
spark.sql(tfs_technical_names_merged_2)